<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>

<?php
$_product    = $this->getProduct();
$_attributes = Mage::helper('core')->decorateArray($this->getAllowAttributes());
?>
<?php if ($_product->isSaleable() && count($_attributes)):?>
    <dl>
    <?php foreach($_attributes as $_attribute): ?>
        <dt><label class="required"><em>*</em><?php echo $_attribute->getLabel() ?></label></dt>
        <dd<?php if ($_attribute->decoratedIsLast){?> class="last"<?php }?>>
            <div class="input-box">

                <?php if( ($attr_id = $_attribute->getAttributeId()) == 92 /* Color Attribute Id */): ?>
                    <?php
                        $optionarray = $_attribute->getPrices();
                        $optionlist = array();
                        for ($i=0; $i < count($optionarray); $i++) { 
                            array_push($optionlist, $optionarray[$i]['value_index']);
                        }
                        $_collection = Mage::getResourceModel('eav/entity_attribute_option_collection')
                            ->setAttributeFilter($attr_id)->setStoreFilter(0)->load();
                    ?>
                        <select name="super_attribute[<?php echo $_attribute->getAttributeId() ?>]" id="attribute<?php echo $_attribute->getAttributeId() ?>" class="required-entry super-attribute-select" style="display:none;">
                            <option><?php echo $this->__('Choose an Option...') ?></option>
                        </select>
                    <?php
                        foreach( $_collection->toOptionArray() as $_cur_option ) {
                            if(in_array($_cur_option['value'], $optionlist)){
                                $label = $_cur_option['label'];
                                $value = $_cur_option['value'];
                    ?>
                                    <li>
                                        <a id="<?php echo $value; ?>" class="option_config" title="<?php echo $_attribute->getLabel() ?>" style="background:<?php echo $label; ?>;width: 10px;height: 10px;display: inline-block;"></a>
                                        <input type="checkbox" name="super_attribute[<?php echo $_attribute->getAttributeId() ?>]" id="attribute<?php echo $_attribute->getAttributeId().'['.$value.']' ?>" value="<?php echo $value; ?>" class="box-input-config" style="display:none;">
                                    </li>
                    <?php
                            }
                        }
                    ?>
                <?php else: ?>
                        <select name="super_attribute[<?php echo $_attribute->getAttributeId() ?>]" id="attribute<?php echo $_attribute->getAttributeId() ?>" class="required-entry super-attribute-select">
                            <option><?php echo $this->__('Choose an Option...') ?></option>
                        </select>
                <?php endif; ?>
              </div>
        </dd>
    <?php endforeach; ?>
    </dl>
    <script type="text/javascript">
        var spConfig = new Product.Config(<?php echo $this->getJsonConfig() ?>);
    </script>
<?php endif;?>
