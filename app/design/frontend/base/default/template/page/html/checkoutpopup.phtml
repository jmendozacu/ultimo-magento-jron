<?php

	// Create a new CouponCode
	// Get the rule in question
	$couponid = Mage::getStoreConfig('fortuneglobe/fortuneglobe_group/couponid');
	if($couponid > 0){
		$rule = Mage::getModel('salesrule/rule')->load($couponid);
	}else{
		print_r('Fehlerhafte Gutscheinid');
		die();
	}


	// Define a coupon code generator
	// Look at Mage_SalesRule_Model_Coupon_Massgenerator for options

	$generator = Mage::getModel('salesrule/coupon_massgenerator');
	$parameters = array(
		'count'=>Mage::getStoreConfig('fortuneglobe/fortuneglobe_group/couponcounter'),
		'format'=>'alphanumeric',
		'dash_every_x_characters'=>Mage::getStoreConfig('fortuneglobe/fortuneglobe_group/coupondash'),
		'prefix'=>Mage::getStoreConfig('fortuneglobe/fortuneglobe_group/couponprefix'),
		'suffix'=>Mage::getStoreConfig('fortuneglobe/fortuneglobe_group/couponsuffix'),
		'length'=>Mage::getStoreConfig('fortuneglobe/fortuneglobe_group/couponlength')
	);
	$generator->setFormat( Mage_SalesRule_Helper_Coupon::COUPON_FORMAT_ALPHANUMERIC );
	$generator->setDash( !empty($parameters['dash_every_x_characters'])? (int) $parameters['dash_every_x_characters'] : 0);
	$generator->setLength( !empty($parameters['length'])? (int) $parameters['length'] : 10);
	$generator->setPrefix( !empty($parameters['prefix'])? $parameters['prefix'] : '');
	$generator->setSuffix( !empty($parameters['suffix'])? $parameters['suffix'] : '');

	// Set the generator, and coupon type so it's able to generate
	$rule->setCouponCodeGenerator($generator);
	$rule->setCouponType( Mage_SalesRule_Model_Rule::COUPON_TYPE_AUTO );

	// Get as many coupons as you required
	$count = !empty($parameters['count'])? (int) $parameters['count'] : 1;
	$codes = array();
	// Possibility for multiple generations
	for( $i = 0; $i < $count; $i++ ){
		$coupon = $rule->acquireCoupon();
		$coupon->setType(Mage_SalesRule_Helper_Coupon::COUPON_TYPE_SPECIFIC_AUTOGENERATED)->save();

		$code = $coupon->getCode();
		$codes[] = $code;
	}

	//Print generated CouponCode
	echo trim($codes[0]);

?>